@model NTQ_Solution.Areas.Admin.Data.RigisterModel
@if (Model.Role == true)
{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
else
{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutUser.cshtml";
}


<section class="vh-100" style="background-color: #f4f5f7;">
    <div class="container py-5 h-300">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col col-lg-12 mb-4 mb-lg-0">
                <div class="card mb-3" style="border-radius: .5rem;">
                    <div class="row g-0">
                        <div style="background: #f6d365; / Chrome 10-25, Safari 5.1-6 / background: -webkit-linear-gradient(to right bottom, rgba(246, 211, 101, 1), rgba(253, 160, 133, 1)); / W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ / background: linear-gradient(to right bottom, rgba(246, 211, 101, 1), rgba(253, 160, 133, 1))" class="col-md-4 gradient-custom text-center text-white"
                             style="border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;">
                            <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp"
                                 alt="Avatar" class="img-fluid my-5" style="width: 80px;" />
                            <h5>@Model.Email</h5>
                            <p>
                                @(Model.Role == true ? "Admin":"User")
                            </p>
                            <i class="far fa-edit mb-5"></i>
                        </div>
                        <div class="col-md-8">
                            <div class="card-body p-4">
                                <h6>Information</h6>
                                <hr class="mt-0 mb-4">
                                <div class="row pt-1">
                                    <div class="col-6 mb-3">
                                        <h6>Email</h6>

                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" , @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-6 mb-3">
                                        <h6>UserName</h6>
                                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row pt-1">
                                    <div class="col-6 mb-3">
                                        <h6>PassWord</h6>
                                        <input type="password" placeholder="Password" id="password" class="form-control" name="password" value="@Model.Password" readonly ="true" />
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        <i class="fa fa-eye" id="eye"></i>
                                    </div>
                                </div>
                                <div class="d-flex justify-content-start">
                                    <a class="btn btn-success" style="text-decoration:none" href="/Admin/MyProFile/Update/@Model.ID"><ic class="fa fa-edit"></ic> Update</a>
                                    <a class="btn btn-danger" style="text-decoration:none" href="/Admin/MyProFile/Logout"><ic class="fa fa-cancel"></ic> Logout</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    function show() {
        var p = document.getElementById('password');
        p.setAttribute('type', 'text');
    }

    function hide() {
        var p = document.getElementById('password');
        p.setAttribute('type', 'password');
    }

    var pwShown = 0;

    document.getElementById("eye").addEventListener("click", function () {
        if (pwShown == 0) {
            pwShown = 1;
            document.getElementById("eye").classList.add("fa-eye-slash");
            document.getElementById("eye").classList.remove("fa-eye");
            show();
        } else {
            pwShown = 0;
            document.getElementById("eye").classList.add("fa-eye");
            document.getElementById("eye").classList.remove("fa-eye-slash");
            hide();
        }
    }, false);
</script>