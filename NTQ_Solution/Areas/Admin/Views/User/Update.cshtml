@model NTQ_Solution.Areas.Admin.Data.RigisterModel

@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Update</h2>

@using (Html.BeginForm("Update", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control"  } })*@
                <input type="password" placeholder="Password" id="password" class="masked" name="password" value="@Model.Password" />
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <i class="fa fa-eye" id="eye"></i>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComfimPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComfimPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ComfimPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Admin</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Role)
                    @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}



<div>
    @if (Model.Role == true)
    {
        @Html.ActionLink("Back to List", "Index", "ListUser")
    }
    else
    {
        <h5>hello</h5>
    }

</div>

<script>
    function show() {
        var p = document.getElementById('password');
        p.setAttribute('type', 'text');
    }

    function hide() {
        var p = document.getElementById('password');
        p.setAttribute('type', 'password');
    }

    var pwShown = 0;

    document.getElementById("eye").addEventListener("click", function () {
        if (pwShown == 0) {
            pwShown = 1;
            document.getElementById("eye").classList.add("fa-eye-slash");
            document.getElementById("eye").classList.remove("fa-eye");
            show();
        } else {
            pwShown = 0;
            document.getElementById("eye").classList.add("fa-eye");
            document.getElementById("eye").classList.remove("fa-eye-slash");
            hide();
        }
    }, false);
</script>